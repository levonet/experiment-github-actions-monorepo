---
name: test

on:
  pull_request:

env:
  N_123: -123
  N_456: -456
  P_123: 123
  P_456: 564
  ZERO: 0

jobs:
  select:
    runs-on: ubuntu-latest
    steps:
    - id: out
      run: |
        echo "::set-output name=n_123::-123"
        echo "::set-output name=n_456::-456"
        echo "::set-output name=p_123::123"
        echo "::set-output name=p_456::456"
        echo "::set-output name=zero::0"
    - name: Test env in condition
      run: |
        echo " 123 > 456,  expected: false, actual: ${{ env.P_123 > env.P_456 }}"
        echo " 456 > 123,  expected: true,  actual: ${{ env.P_456 > env.P_123 }}"
        echo " 123 < 456,  expected: true,  actual: ${{ env.P_123 < env.P_456 }}"
        echo " 456 < 123,  expected: false, actual: ${{ env.P_456 < env.P_123 }}"
        echo "   0 > 123,  expected: false, actual: ${{ env.ZERO  > env.P_123 }}"
        echo " 123 > 0,    expected: true,  actual: ${{ env.P_123 > env.ZERO  }}"
        echo "   0 < 123,  expected: true,  actual: ${{ env.ZERO  < env.P_123 }}"
        echo " 123 < 0,    expected: false, actual: ${{ env.P_123 < env.ZERO  }}"
        echo "-123 > 456,  expected: false, actual: ${{ env.N_123 > env.P_456 }}"
        echo "-456 > 123,  expected: false, actual: ${{ env.N_456 > env.P_123 }}"
        echo "-123 < 456,  expected: true,  actual: ${{ env.N_123 < env.P_456 }}"
        echo "-456 < 123,  expected: true,  actual: ${{ env.N_456 < env.P_123 }}"
        echo " 123 > -456, expected: true,  actual: ${{ env.P_123 > env.N_456 }}"
        echo " 456 > -123, expected: true,  actual: ${{ env.P_456 > env.N_123 }}"
        echo " 123 < -456, expected: false, actual: ${{ env.P_123 < env.N_456 }}"
        echo " 456 < -123, expected: false, actual: ${{ env.P_456 < env.N_123 }}"
        echo "   0 > -123, expected: true,  actual: ${{ env.ZERO  > env.N_123 }}"
        echo "-123 > 0,    expected: false, actual: ${{ env.N_123 > env.ZERO  }}"
        echo "   0 < -123, expected: false, actual: ${{ env.ZERO  < env.N_123 }}"
        echo "-123 < 0,    expected: true,  actual: ${{ env.N_123 < env.ZERO  }}"
        echo "-123 > -456, expected: true,  actual: ${{ env.N_123 > env.N_456 }} ERROR!"
        echo "-456 > -123, expected: false, actual: ${{ env.N_456 > env.N_123 }} ERROR!"
        echo "-123 < -456, expected: false, actual: ${{ env.N_123 < env.N_456 }} ERROR!"
        echo "-456 < -123, expected: true,  actual: ${{ env.N_456 < env.N_123 }} ERROR!"
    - name: Test outputs in condition
      run: |
        echo " 123 > 456,  expected: false, actual: ${{ steps.out.outputs.p_123 > steps.out.outputs.p_456 }}"
        echo " 456 > 123,  expected: true,  actual: ${{ steps.out.outputs.p_456 > steps.out.outputs.p_123 }}"
        echo " 123 < 456,  expected: true,  actual: ${{ steps.out.outputs.p_123 < steps.out.outputs.p_456 }}"
        echo " 456 < 123,  expected: false, actual: ${{ steps.out.outputs.p_456 < steps.out.outputs.p_123 }}"
        echo "   0 > 123,  expected: false, actual: ${{ steps.out.outputs.zero  > steps.out.outputs.p_123 }}"
        echo " 123 > 0,    expected: true,  actual: ${{ steps.out.outputs.p_123 > steps.out.outputs.zero  }}"
        echo "   0 < 123,  expected: true,  actual: ${{ steps.out.outputs.zero  < steps.out.outputs.p_123 }}"
        echo " 123 < 0,    expected: false, actual: ${{ steps.out.outputs.p_123 < steps.out.outputs.zero  }}"
        echo "-123 > 456,  expected: false, actual: ${{ steps.out.outputs.n_123 > steps.out.outputs.p_456 }}"
        echo "-456 > 123,  expected: false, actual: ${{ steps.out.outputs.n_456 > steps.out.outputs.p_123 }}"
        echo "-123 < 456,  expected: true,  actual: ${{ steps.out.outputs.n_123 < steps.out.outputs.p_456 }}"
        echo "-456 < 123,  expected: true,  actual: ${{ steps.out.outputs.n_456 < steps.out.outputs.p_123 }}"
        echo " 123 > -456, expected: true,  actual: ${{ steps.out.outputs.p_123 > steps.out.outputs.n_456 }}"
        echo " 456 > -123, expected: true,  actual: ${{ steps.out.outputs.p_456 > steps.out.outputs.n_123 }}"
        echo " 123 < -456, expected: false, actual: ${{ steps.out.outputs.p_123 < steps.out.outputs.n_456 }}"
        echo " 456 < -123, expected: false, actual: ${{ steps.out.outputs.p_456 < steps.out.outputs.n_123 }}"
        echo "   0 > -123, expected: true,  actual: ${{ steps.out.outputs.zero  > steps.out.outputs.n_123 }}"
        echo "-123 > 0,    expected: false, actual: ${{ steps.out.outputs.n_123 > steps.out.outputs.zero  }}"
        echo "   0 < -123, expected: false, actual: ${{ steps.out.outputs.zero  < steps.out.outputs.n_123 }}"
        echo "-123 < 0,    expected: true,  actual: ${{ steps.out.outputs.n_123 < steps.out.outputs.zero  }}"
        echo "-123 > -456, expected: true,  actual: ${{ steps.out.outputs.n_123 > steps.out.outputs.n_456 }} ERROR!"
        echo "-456 > -123, expected: false, actual: ${{ steps.out.outputs.n_456 > steps.out.outputs.n_123 }} ERROR!"
        echo "-123 < -456, expected: false, actual: ${{ steps.out.outputs.n_123 < steps.out.outputs.n_456 }} ERROR!"
        echo "-456 < -123, expected: true,  actual: ${{ steps.out.outputs.n_456 < steps.out.outputs.n_123 }} ERROR!"
