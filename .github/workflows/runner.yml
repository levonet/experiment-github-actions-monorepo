---
name: runner

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    types:
    - opened
    - synchronize
    - reopened
  release:
    types:
    - published

jobs:
  select:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: .github/projects.yml
    - run: |
        env | sort
        echo "github.base_ref: ${{ github.base_ref }}"
        echo "github.base_sha: ${{ github.base_sha }}"
        echo "github.event.action: ${{ github.event.action }}"
        echo "github.event.pull_request: ${{ toJSON(github.event.pull_request) }}"
        git log -n 5
  run:
    if: ${{ needs.select.outputs.projects != '[]' }}
    needs: select
    strategy:
      matrix:
        project: ${{ fromJSON(needs.select.outputs.projects) }}
    runs-on: ubuntu-latest
    steps:
    - run: |
        env | sort
        echo "matrix.project: ${{ matrix.project }}"
        echo "github.base_ref: ${{ github.base_ref }}"
        echo "github.base_sha: ${{ github.base_sha }}"
        echo "github.event.action: ${{ github.event.action }}"
        echo "github.event.pull_request.merged: ${{ github.event.pull_request.merged }}"
        git log -n 5
